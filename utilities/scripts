#!/bin/bash
test() {
	${1:-./2048} -s -t 1x${2:-10000} -e 1x${2:-10000} -% none | egrep -o [0-9.]+ops
}
testp() {
	${1:-./2048} -s -t ${2:-$(nproc)0} -e ${2:-$(nproc)0} -p -% | grep summary | egrep -o [0-9.]+ops
}
compare() {
	lc=${1:-./base}
	[ -e $lc ] || lc=TDL2048+/2048
	rc=${2:-./2048}
	[ -e $lc ] || exit 1
	[ -e $rc ] || exit 2
	lhs=0; rhs=0;
	for i in $(seq 1 1 ${3:-10}); do
		echo -en "#$i\t"
		if (( i % 2 == 0 )); then
			L=($(test $lc))
			R=($(test $rc))
		else
			R=($(test $rc))
			L=($(test $lc))
		fi
		L=(${L[@]%ops})
		lhs=$lhs+${L[0]}+${L[1]}
		R=(${R[@]%ops})
		rhs=$rhs+${R[0]}+${R[1]}
		echo -en "$(bc -l <<< "scale=2; ($lhs)/$((i+i))")\t"
		echo -en "$(bc -l <<< "scale=2; ($rhs)/$((i+i))")\n"
	done
}
comparep() {
	lc=${1:-./base}
	[ -e $lc ] || lc=TDL2048+/2048
	rc=${2:-./2048}
	[ -e $lc ] || exit 1
	[ -e $rc ] || exit 2
	lhs=0; rhs=0;
	for i in $(seq 1 1 ${3:-10}); do
		echo -en "#$i\t"
		if (( i % 2 == 0 )); then
			L=($(testp $lc))
			R=($(testp $rc))
		else
			R=($(testp $rc))
			L=($(testp $lc))
		fi
		L=(${L[@]%ops})
		lhs=$lhs+${L[0]}+${L[1]}
		R=(${R[@]%ops})
		rhs=$rhs+${R[0]}+${R[1]}
		echo -en "$(bc -l <<< "scale=2; ($lhs)/$((i+i))")\t"
		echo -en "$(bc -l <<< "scale=2; ($rhs)/$((i+i))")\n"
	done
}
bench ()
{
    optimize=();
    evaluate=();
    for i in $(seq -w 1 1 ${2:-10});
    do
        echo -n "loop $i: ";
        res=($(test ${1:-./2048}));
        echo ${res[@]};
        res=(${res[@]//ops/});
        optimize+=(${res[0]});
        evaluate+=(${res[1]});
        sleep 1;
    done;
    optimize=${optimize[@]};
    evaluate=${evaluate[@]};
    echo average: $(bc -l <<< "scale=2; (${optimize// /+})/${2:-10}")ops $(bc -l <<< "scale=2; (${evaluate// /+})/${2:-10}")ops | egrep --color=auto [0-9.]+ops
}
